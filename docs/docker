docker build --tag [tag] --force-rm=true .
docker tag [id] [account]/[repository]:[tag]

docker run --name rabbitmq-management -d -p 15672:15672 -p 5672:5672 -p 15671:15671 -p 5671:5671 -p 4369:4369 --net photo-app -it rabbitmq:3-management
docker run --name config-server -d -p 8888:8888 -e spring.rabbitmq.host=rabbitmq-management --net photo-app -it brunor9/config-server

docker run --name discovery-service -d -p 8761:8761 -e config.host=config-server --net photo-app -it brunor9/brpa-discovery-service
docker run --name api-gateway -d -p 8765:8765 -e eureka.host=discovery-service -e config.host=config-server --net photo-app -it brunor9/brpa-api-gateway

docker run --name elasticsearch -v esdata1:/usr/share/elasticsearch/data -d -p 9200:9200 -p 9300:9300 -e discovery.type=single-node --net photo-app -it elasticsearch:7.3.0
docker run --name kibana -d -p 5601:5601 --net photo-app -it kibana:7.3.0

docker run --name albums-ms -v /home/api-logs:/api-logs -d -e eureka.host=discovery-service -e config.host=config-server --net photo-app -it brunor9/brpa-albums-ms
docker run --name users-ms -v /home/api-logs:/api-logs -d -e eureka.host=discovery-service -e config.host=config-server -e db.host=mysql --net photo-app -it brunor9/brpa-users-ms

docker run --name mysql -v /var/lib/mysql:/var/lib/mysql -d -p 3307:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=photo_app -e MYSQL_USER=user -e MYSQL_PASSWORD=pass --net photo-app -it mysql:latest
docker run --name logstash -v /home/api-logs:/api-logs -d --net photo-app -it brunor9/brpa-logstash

docker login --username=[username]
docker push [account]/[repository]:[tag]